---
# Only the main Sass file needs front matter (the dashes are enough)
---

// @import "minima";

/**
 * The CSS shown here will not be introduced in the Quickstart guide, but shows
 * how you can use CSS to style your Element's container.
 */
 .stripe--payment-form {
   // use this property to animate
   // transform: translate(-50vw);
   button {
     margin-top: 1em;
   }
   p {
     margin: 0;
   }
   label {
     margin-bottom: 0;
   }
   .form-row {
     margin-bottom: 1em;
   }
  .StripeElement {
    width: 100%;
    background-color: white;
    height: 40px;
    padding: 10px 12px;
    border-radius: 4px;
    border: 1px solid transparent;
    box-shadow: 0 1px 3px 0 #e6ebf1;
    -webkit-transition: box-shadow 150ms ease;
    transition: box-shadow 150ms ease;
  }

  .StripeElement--focus {
    box-shadow: 0 1px 3px 0 #cfd7df;
  }

  .StripeElement--invalid {
    border-color: #fa755a;
  }
}

.StripeElement--webkit-autofill {
  background-color: #fefde5 !important;
}

#left-arrow,
#right-arrow {
  position: absolute;
  z-index: 999;
  top: 50%;
  transform: translateY(-50%);
  padding: 0 2.25em;
}

#right-arrow {
  right: 0;
}

#spinner {
  width: 40px;
  height: 40px;
  margin: 100px auto;
  background-color: #000;

  border-radius: 100%;
  &.animated {
    -webkit-animation: sk-scaleout 1.0s infinite ease-in-out;
    animation: sk-scaleout 1.0s infinite ease-in-out;
  }
}

@-webkit-keyframes sk-scaleout {
  0% { -webkit-transform: scale(0) }
  100% {
    -webkit-transform: scale(1.0);
    opacity: 0;
  }
}

@keyframes sk-scaleout {
  0% {
    -webkit-transform: scale(0);
    transform: scale(0);
  } 100% {
    -webkit-transform: scale(1.0);
    transform: scale(1.0);
    opacity: 0;
  }
}

// // Define vars we'll be using
// $brand-success: #5cb85c;
// $loader-size: 5em;
// $check-height: $loader-size/2;
// $check-width: $check-height/2;
// $check-left: ($loader-size/6 + $loader-size/12);
// $check-thickness: 3px;
// $check-color: $brand-success;
//
// .circle-loader {
//   margin-bottom: $loader-size/2;
//   border: 1px solid rgba(0, 0, 0, 0.2);
//   border-left-color: $check-color;
//   animation: loader-spin 1.2s infinite linear;
//   position: relative;
//   display: inline-block;
//   vertical-align: top;
//   border-radius: 50%;
//   width: $loader-size;
//   height: $loader-size;
// }
//
// .load-complete {
//   -webkit-animation: none;
//   animation: none;
//   border-color: $check-color;
//   transition: border 500ms ease-out;
// }
//
// .checkmark {
//   display: none;
//
//   &.draw:after {
//     animation-duration: 800ms;
//     animation-timing-function: ease;
//     animation-name: checkmark;
//     transform: scaleX(-1) rotate(135deg);
//   }
//
//   &:after {
//     opacity: 1;
//     height: $check-height;
//     width: $check-width;
//     transform-origin: left top;
//     border-right: $check-thickness solid $check-color;
//     border-top: $check-thickness solid $check-color;
//     content: '';
//     left: $check-left;
//     top: $check-height;
//     position: absolute;
//   }
// }
//
// @keyframes loader-spin {
//   0% {
//     transform: rotate(0deg);
//   }
//   100% {
//     transform: rotate(360deg);
//   }
// }
//
// @keyframes checkmark {
//   0% {
//     height: 0;
//     width: 0;
//     opacity: 1;
//   }
//   20% {
//     height: 0;
//     width: $check-width;
//     opacity: 1;
//   }
//   40% {
//     height: $check-height;
//     width: $check-width;
//     opacity: 1;
//   }
//   100% {
//     height: $check-height;
//     width: $check-width;
//     opacity: 1;
//   }
// }
